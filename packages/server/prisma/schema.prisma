// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String  @db.VarChar(255)
  surname  String? @db.VarChar(255)
  email    String  @unique @db.VarChar(255)
  password String  @db.VarChar(255)
  phone    String  @unique @db.VarChar(255)

  InstitutionManager InstitutionManager[]
  Professor          Professor[]
  Student            Student[]

  @@map("users")
}

model Institution {
  id    String @id @default(uuid())
  name  String @db.VarChar(255)
  cnpj  String @unique @db.VarChar(255)
  phone String @unique @db.VarChar(255)

  InstitutionManager InstitutionManager[]
  Professor          Professor[]
  Student            Student[]
  Course             Course[]

  @@map("institutions")
}

model InstitutionManager {
  id            String @id @default(uuid())
  userId        String @map("user_id")
  institutionId String @unique @map("institution_id")

  user        User        @relation(fields: [userId], references: [id])
  institution Institution @relation(fields: [institutionId], references: [id])

  @@map("institution_managers")
}

model Professor {
  id            String @id @default(uuid())
  userId        String @map("user_id")
  institutionId String @map("institution_id")

  user        User        @relation(fields: [userId], references: [id])
  institution Institution @relation(fields: [institutionId], references: [id])

  @@unique([userId, institutionId])
  @@map("professors")
}

model Student {
  id            String @id @default(uuid())
  userId        String @map("user_id")
  institutionId String @map("institution_id")

  user        User        @relation(fields: [userId], references: [id])
  institution Institution @relation(fields: [institutionId], references: [id])

  StudentClassCourseRegistration StudentClassCourseRegistration[]

  @@unique([userId, institutionId])
  @@map("students")
}

model Course {
  id            String @id @default(uuid())
  name          String
  institutionId String @map("institution_id")

  institution Institution @relation(fields: [institutionId], references: [id])

  Discipline  Discipline[]
  ClassCourse ClassCourse[]

  @@map("courses")
}

model Discipline {
  id       String @id @default(uuid())
  name     String
  courseId String @map("course_id")

  course Course @relation(fields: [courseId], references: [id])

  @@map("disciplines")
}

model ClassCourse {
  id       String   @id @default(uuid())
  name     String
  start    DateTime
  courseId String   @map("course_id")

  course Course @relation(fields: [courseId], references: [id])

  StudentClassCourseRegistration StudentClassCourseRegistration[]

  @@unique([start, courseId])
  @@map("class_courses")
}

model StudentClassCourseRegistration {
  id            String @id @default(uuid())
  studentId     String @map("student_id")
  classCourseId String @map("class_course_id")

  classCourse ClassCourse @relation(fields: [classCourseId], references: [id])
  student     Student     @relation(fields: [studentId], references: [id])

  @@map("student_class_course_registrations")
}
